Problem:

https://leetcode.com/problems/delete-node-in-a-bst/description/


Solution:

class Solution {
public:
     TreeNode* minVal(TreeNode* root){
            while(root->left != NULL){
                root = root->left;
            }
            return root;
        }

    TreeNode* deleteNode(TreeNode* root, int key) {
        //base case
        if(root == NULL)
            return NULL;

        if(root->val == key){
            //0 child
            if(root->left == NULL && root->right == NULL){
                    delete root;
                    return NULL;
            }

            //1 child
            //left child
            if(root->left != NULL && root->right == NULL){
                TreeNode* temp = root->left;
                delete root;
                return temp;
            }
            //right child
            if(root->left == NULL && root->right != NULL){
                TreeNode* temp = root->right;
                delete root;
                return temp;
            }

            //2 child
            if(root->left != NULL && root->right != NULL){
                int mini = minVal(root->right)->val;
                //root ke data me mini value copy krdi   
                root->val = mini;
                
                //root ke right se mini value ko delete krdo
                root->right = deleteNode(root->right, mini);
                return root;
            }

        }    

        else if(root->val > key){
            //left part me jao
            root->left = deleteNode(root->left, key);
            return root;
        }

        else{
            //right part me jao
            root->right = deleteNode(root->right, key);
            return root;
        }
        return root;
    }
};
